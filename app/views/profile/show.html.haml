- if @user == current_user
  - content_for(:nav) do
    .edit-banner{style: "display:none"}
      This is your public profile!
      %span.edit-it{style: 'padding: 0 10px'}= link_to "EDIT IT", edit_user_profile_index_path(@user)
      |
      %span.share-it{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"mysimplist.com/#{@user.username}", style: 'padding: 0 10px; color: darkgray'}
        %a SHARE IT
.row.profile-container
  .header
    .header-content.text-center.center-block
      .blank-image
        - if @user.avatar.nil?
          = image_tag("default.png")
        - else
          = image_tag(@user.avatar)
      %h3
        %span= @user.first_name
        - if @user.verified?
          .verified-stamp= image_tag("verified.png")
      %h6= @user.description
      .socials
        - if @user.facebook?
          %i.fa.fa-facebook{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.facebook}"}
        - if @user.twitter?
          %i.fa.fa-twitter{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.twitter}"}
        - if @user.pinterest?
          %i.fa.fa-pinterest{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.pinterest}"}
  - if @user != current_user
    %br
    %center.follow-button
      = link_to "Follow", follow_user_profile_index_path(@user), class: "btn"
  .top-buffer
  .categories.container-fluid
    .row.slider-nav
      - @sortedlists.each do |list|
        .category= list.name
  .top-buffer
  .slider-for
    - if @sortedlists.include? @currentlist
      .simplists
        .current-list
          .list-description THINGS ON MY MIND
          - @rankings.each do |ranking|
            %div{class: "simplists-#{ranking} simplists"}
              - case ranking
              - when 1
                - thing = @number_1
              - when 2
                - thing = @number_2
              - when 3
                - thing = @number_3
              - when 4
                - thing = @number_4
              - when 5
                - thing = @number_5
              - if thing.class == Movie
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      = render partial: "like_and_comment", locals: {:thing => thing}
                      .box.pull-left
                        - if thing.picture && thing.picture.empty? != true
                          %img{:src => "https://image.tmdb.org/t/p/w154#{thing.picture}"}
                      .item-info.pull-right
                        %strong.item-title= thing.name
                        %span.item-author= "(" + thing.year[0,4] + ")"
                        .item-overview.truncate= thing.overview
                  .clearfix
                - if current_user
                  = render partial: "comments", locals: {:thing => thing}
              - elsif thing.class == Song
                .simplist.song-simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      = render partial: "like_and_comment", locals: {:thing => thing}
                      .simplist-image.song-image.pull-left
                        - if thing.picture
                          %img{:src => "#{thing.picture}"}
                        %img#cover{:rel => "tooltip", :src => "", :title => ""}
                      .item-info.pull-left
                        .item-title= thing.name
                        .item-author= thing.artist
                        .item-overview= thing.album
                  .clearfix
                - if current_user
                  = render partial: "comments", locals: {:thing => thing}
              - elsif thing.class == Book
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      = render partial: "like_and_comment", locals: {:thing => thing}
                      .box.pull-left
                        - if thing.picture
                          %img{:src => "#{thing.picture}"}
                      - if thing.link?
                        = link_to "#{thing.link}" do
                          .item-info.pull-right
                            .item-title= thing.name
                            .item-author= thing.author
                            .item-published= thing.published[0,4]
                            .item-overview.truncate= thing.description
                      - else
                        .item-info.pull-right
                          .item-title= thing.name
                          .item-author= thing.author
                          .item-published= thing.published[0,4]
                          .item-overview.truncate= thing.description
                  .clearfix
                - if current_user
                  = render partial: "comments", locals: {:thing => thing}
              - elsif thing.class == Quote
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form
                      = render partial: "like_and_comment", locals: {:thing => thing}
                      .quote.pull-left
                        .quote-text= thing.content
                        .quote-author= thing.source
                        .clearfix
                      .clearfix
                  .clearfix
                - if current_user
                  = render partial: "comments", locals: {:thing => thing}
              - elsif thing.class == Show
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      = render partial: "like_and_comment", locals: {:thing => thing}
                      .box.pull-left
                        - if thing.picture && thing.picture.empty? != true
                          %img{:src => "https://image.tmdb.org/t/p/w154#{thing.picture}"}
                      .item-info.pull-right
                        %strong.item-title= thing.name
                        .item-overview.truncate= thing.description
                  .clearfix
                - if current_user
                  = render partial: "comments", locals: {:thing => thing}
              - else
    - if @sortedlists.include? @movielist
      .simplists
        - @movies.each do |movie|
          .simplist
            %h1.pull-left #{@movies.index(movie)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                = render partial: "like_and_comment", locals: {:thing => movie}
                .box.pull-left
                  - if movie.picture && movie.picture.empty? != true
                    %img{:src => "https://image.tmdb.org/t/p/w154#{movie.picture}"}
                .item-info.pull-right
                  %strong.item-title= movie.name
                  %span.item-author= "(" + movie.year[0,4] + ")"
                  .item-overview.truncate= movie.overview
                  .clearfix
            .clearfix
          - if current_user
            = render partial: "comments", locals: {:thing => movie}
    - if @sortedlists.include? @booklist
      .simplists
        - @books.each do |book|
          .simplist
            %h1.pull-left #{@books.index(book)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                = render partial: "like_and_comment", locals: {:thing => book}
                .box.pull-left
                  - if book.picture
                    %img{:src => "#{book.picture}"}
                - if book.link?
                  = link_to "#{book.link}" do
                    .item-info.pull-right
                      .item-title= book.name
                      .item-author= book.author
                      .item-published= book.published[0,4]
                      .item-overview.truncate= book.description
                - else
                  .item-info.pull-right
                    .item-title= book.name
                    .item-author= book.author
                    .item-published= book.published[0,4]
                    .item-overview.truncate= book.description
            .clearfix
          - if current_user
            = render partial: "comments", locals: {:thing => book}
    - if @sortedlists.include? @quotelist
      .simplists
        - @quotes.each do |quote|
          .simplist
            %h1.pull-left #{@quotes.index(quote)+1}
            .quote.pull-left
              .quote-text= quote.content
              .quote-author= quote.source
              = render partial: "like_and_comment", locals: {:thing => quote}
            .clearfix
          - if current_user
            = render partial: "comments", locals: {:thing => quote}
    - if @sortedlists.include? @songlist
      .simplists
        - @songs.each do |song|
          .simplist.song-simplist
            %h1.pull-left #{@songs.index(song)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                = render partial: "like_and_comment", locals: {:thing => song}
                .simplist-image.song-image.pull-left
                  - if song.picture
                    %img{:src => "#{song.picture}"}
                  %img#cover{:rel => "tooltip", :src => "", :title => ""}
                .item-info.pull-left
                  .item-title= song.name
                  .item-author= song.artist
                  .item-overview= song.album
            .clearfix
          - if current_user
            = render partial: "comments", locals: {:thing => song}
    - if @sortedlists.include? @productlist
      .simplists
        - @products.each do |product|
          .simplist
            %h1.pull-left #{@products.index(product)+1}
            .product-wrapper.pull-left
              %center
                .product-picture
                  = image_tag(product.picture)
                %br
                .product-name
                  - if product.link
                    = link_to "#{product.name}", product.link
                  - else
                    = product.name
            .clearfix
    - if @sortedlists.include? @showlist
      .simplists
        - @shows.each do |show|
          .simplist
            %h1.pull-left #{@shows.index(show)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                = render partial: "like_and_comment", locals: {:thing => show}
                .box.pull-left
                  - if show.picture && show.picture.empty? != true
                    %img{:src => "https://image.tmdb.org/t/p/w154#{show.picture}"}
                .item-info.pull-right
                  %strong.item-title= show.name
                  .item-overview.truncate= show.description
            .clearfix
          - if current_user
            = render partial: "comments", locals: {:thing => show}
:javascript

    $(document).ready(function(){

      var prenumberOfLists = #{@sortedlists.size};
      if (prenumberOfLists > 4) {
        numberOfLists = 4;
      } else {
        numberOfLists = prenumberOfLists;
      }

      if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
        //$('.category.slick-current').css('color', 'darkred');
        //$('.category.slick-current').css('borderBottom', '8px solid darkred');

        $('.slider-nav').slick({
          slidesToShow: 3,
          slidesToScroll: 1,
          asNavFor: '.slider-for',
          dots: false,
          // centerMode: true,
          focusOnSelect: true,
        });
        $('.slider-for').slick({
          slidesToShow: 1,
          slidesToScroll: 1,
          arrows: false,
          fade: true,
          adaptiveHeight: true,
          asNavFor: '.slider-nav',
        });
      } else {

        $('.slider-nav').slick({
          slidesToShow: numberOfLists,
          accessibility: false,
          // slidesToScroll: 1,
          asNavFor: '.slider-for',
          dots: false,
          // swipeToSlide: true,
          // centerMode: true,
          focusOnSelect: true,
        });
        $('.slider-for').slick({
          slidesToShow: 1,
          slidesToScroll: 1,
          accessibility: false,
          adaptiveHeight: true,
          arrows: false,
          swipe: false,
          fade: true,
          asNavFor: '.slider-nav',
        });
      }
    });


  $(function() {
    //if ($(".slick-current.category").html()=="Now") {
    //  $(".slick-current.slick-active.category").css('color', 'darkred');
    //  $('.slick-current.slick-active.category').css('borderBottom', '4px solid darkred');
    //};
    $('.share-it').tooltip({trigger: 'click'});
    $('.fa').tooltip({trigger:'click'});

    $('.category').first().addClass('active');
    sr = new ScrollReveal();
    sr.reveal('.simplist', {reset: true});
  });


  $(function() {

    $(".select-movie").on("change", function (e) {
      $( ".submit-movielist-btn" ).trigger( "click" );
    });

    $('.truncate').succinct({
      size: 320
    });

    $( ".edit-banner" ).delay( 800 ).fadeIn( 500 );


    $(".select-song").on("change", function (e) {
      $( ".submit-songlist-btn" ).trigger( "click" );
    });

    $(".quote").on("change", function (e) {
      $( ".submit-quotelist-btn" ).trigger( "click" );
    });

    $(".select-book").on("change", function (e) {
      $( ".submit-booklist-btn" ).trigger( "click" );
    });

    function insertPlaceholder(placeholder) {
      var moviename = $(placeholder).parents('.select2').siblings('input').first().val();
      $(placeholder).html(moviename);
    };

    $('body').on('click', function (e) {
        $('[data-toggle="tooltip"]').each(function () {
            //the 'is' for buttons that trigger popups
            //the 'has' for icons within a button that triggers a popup
            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.tooltip').has(e.target).length === 0) {
                $(this).tooltip('hide');
            }
        });
    });

    $( ".select2-selection__placeholder" ).each(function(){
      insertPlaceholder(this);
    });

  });
