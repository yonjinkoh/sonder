- if @user == current_user
  - content_for(:nav) do
    .edit-banner{style: "display:none"}
      This is your public profile!
      %span.edit-it{style: 'padding: 0 10px'}= link_to "EDIT IT", edit_user_profile_index_path(@user)
      |
      %span.share-it{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"mysimplist.com/#{@user.username}", style: 'padding: 0 10px; color: darkgray'}
        %a SHARE IT
.row.profile-container
  .header
    .header-content.text-center.center-block
      .blank-image
        - if @user.avatar.nil?
          = image_tag("default.png")
        - else
          = image_tag(@user.avatar)
      %h3
        %span= @user.first_name
        - if @user.verified?
          .verified-stamp= image_tag("verified.png")
      %h6= @user.description
      .socials
        - if @user.facebook?
          %i.fa.fa-facebook{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.facebook}"}
        - if @user.twitter?
          %i.fa.fa-twitter{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.twitter}"}
        - if @user.pinterest?
          %i.fa.fa-pinterest{"data-toggle"=>"tooltip", "data-placement"=>"bottom", "title"=>"#{@user.pinterest}"}
  .top-buffer
  .categories.container-fluid
    .row.slider-nav
      - @sortedlists.each do |list|
        .category= list.name
  .top-buffer
  .slider-for
    .simplists
      .current-list
        - if @currentlist_items.empty?
          %center Nothing yet!
        - else
          .list-description THINGS ON MY MIND
          - @rankings.each do |ranking|
            %div{class: "simplists-#{ranking} simplists"}
              - case ranking
              - when 1
                - thing = @number_1
              - when 2
                - thing = @number_2
              - when 3
                - thing = @number_3
              - when 4
                - thing = @number_4
              - when 5
                - thing = @number_5
              - if thing.class == Movie
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      - if current_user
                        .like-comment
                          = link_to like_movie_path(thing), id: "heart-movie-#{thing.id}", method: :put, remote: true do
                            - if current_user.voted_for? thing
                              %i.fa.fa-heart.liked #{thing.votes_for.size}
                            - else
                              %i.fa.fa-heart #{thing.votes_for.size}
                          = link_to comment_movie_path(thing), id: "comment-movie-#{thing.id}", remote: true, method: :put do
                            %i.fa.fa-comment #{thing.root_comments.size}
                      .box.pull-left
                        - if thing.picture && thing.picture.empty? != true
                          %img{:src => "https://image.tmdb.org/t/p/w154#{thing.picture}"}
                      .item-info.pull-right
                        %strong.item-title= thing.name
                        %span.item-author= "(" + thing.year[0,4] + ")"
                        .item-overview= thing.overview
                  .clearfix
                - if current_user
                  = render partial: "movies/comments", locals: {:movie => thing}
              - elsif thing.class == Song
                .simplist.song-simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      - if current_user
                        .like-comment
                          = link_to like_song_path(thing), id: "heart-song-#{thing.id}", method: :put, remote: true do
                            - if current_user.voted_for? thing
                              %i.fa.fa-heart.liked #{thing.votes_for.size}
                            - else
                              %i.fa.fa-heart #{thing.votes_for.size}
                          = link_to comment_song_path(thing), id: "comment-song-#{thing.id}", remote: true, method: :put do
                            %i.fa.fa-comment #{thing.root_comments.size}
                      .simplist-image.song-image.pull-left
                        - if thing.picture
                          %img{:src => "#{thing.picture}"}
                        %img#cover{:rel => "tooltip", :src => "", :title => ""}
                      .item-info.pull-left
                        .item-title= thing.name
                        .item-author= thing.artist
                        .item-overview= thing.album
                  .clearfix
                - if current_user
                  = render partial: "songs/comments", locals: {:song => thing}
              - elsif thing.class == Book
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form{style: "display: inline-block;"}
                      - if current_user
                        .like-comment
                          = link_to like_book_path(thing), id: "heart-book-#{thing.id}", method: :put, remote: true do
                            - if current_user.voted_for? thing
                              %i.fa.fa-heart.liked #{thing.votes_for.size}
                            - else
                              %i.fa.fa-heart #{thing.votes_for.size}
                          = link_to comment_book_path(thing), id: "comment-book-#{thing.id}", remote: true, method: :put do
                            %i.fa.fa-comment #{thing.root_comments.size}
                      .box.pull-left
                        - if thing.picture
                          %img{:src => "#{thing.picture}"}
                      - if thing.link?
                        = link_to "#{thing.link}" do
                          .item-info.pull-right
                            .item-title= thing.name
                            .item-author= thing.author
                            .item-published= thing.published[0,4]
                            .item-overview.truncate= thing.description
                      - else
                        .item-info.pull-right
                          .item-title= thing.name
                          .item-author= thing.author
                          .item-published= thing.published[0,4]
                          .item-overview.truncate= thing.description
                  .clearfix
                - if current_user
                  = render partial: "books/comments", locals: {:book => thing}
              - elsif thing.class == Quote
                .simplist
                  %h1.pull-left #{ranking}
                  .enter-new-movie
                    .movie-form
                      - if current_user
                        .like-comment
                          = link_to like_quote_path(thing), id: "heart-quote-#{thing.id}", method: :put, remote: true do
                            - if current_user.voted_for? thing
                              %i.fa.fa-heart.liked #{thing.votes_for.size}
                            - else
                              %i.fa.fa-heart #{thing.votes_for.size}
                          = link_to comment_quote_path(thing), id: "comment-quote-#{thing.id}", remote: true, method: :put do
                            %i.fa.fa-comment #{thing.root_comments.size}
                      .quote.pull-left
                        .quote-text= thing.content
                        .quote-author= thing.source
                        .clearfix
                  .clearfix
                - if current_user
                  = render partial: "quotes/comments", locals: {:quote => thing}
              - else

    .simplists
      - if @movies.empty?
        .simplist
          %center
            %em None yet!
      - else
        - @movies.each do |movie|
          .simplist
            %h1.pull-left #{@movies.index(movie)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                - if current_user
                  .like-comment
                    = link_to like_movie_path(movie), id: "heart-movie-#{movie.id}", method: :put, remote: true do
                      - if current_user.voted_for? movie
                        %i.fa.fa-heart.liked #{movie.votes_for.size}
                      - else
                        %i.fa.fa-heart #{movie.votes_for.size}
                    = link_to comment_movie_path(movie), id: "comment-movie-#{movie.id}", remote: true, method: :put do
                      %i.fa.fa-comment #{movie.root_comments.size}
                .box.pull-left
                  - if movie.picture && movie.picture.empty? != true
                    %img{:src => "https://image.tmdb.org/t/p/w154#{movie.picture}"}
                .item-info.pull-right
                  %strong.item-title= movie.name
                  %span.item-author= "(" + movie.year[0,4] + ")"
                  .item-overview= movie.overview
            .clearfix
          - if current_user
            = render partial: "movies/comments", locals: {:movie => movie}
    .simplists
      - if @books.empty?
        .simplist
          %center
            %em None yet!
      - else
        - @books.each do |book|
          .simplist
            %h1.pull-left #{@books.index(book)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                - if current_user
                  .like-comment
                    = link_to like_book_path(book), id: "heart-book-#{book.id}", method: :put, remote: true do
                      - if current_user.voted_for? book
                        %i.fa.fa-heart.liked #{book.votes_for.size}
                      - else
                        %i.fa.fa-heart #{book.votes_for.size}
                    = link_to comment_book_path(book), id: "comment-book-#{book.id}", remote: true, method: :put do
                      %i.fa.fa-comment #{book.root_comments.size}
                .box.pull-left
                  - if book.picture
                    %img{:src => "#{book.picture}"}
                - if book.link?
                  = link_to "#{book.link}" do
                    .item-info.pull-right
                      .item-title= book.name
                      .item-author= book.author
                      .item-published= book.published[0,4]
                      .item-overview.truncate= book.description
                - else
                  .item-info.pull-right
                    .item-title= book.name
                    .item-author= book.author
                    .item-published= book.published[0,4]
                    .item-overview.truncate= book.description
            .clearfix
          - if current_user
            = render partial: "books/comments", locals: {:book => book}
    .simplists
      - if @quotes.empty?
        .simplist
          %center
            %em None yet!
      - else
        - @quotes.each do |quote|
          .simplist
            %h1.pull-left #{@quotes.index(quote)+1}
            .quote.pull-left
              .quote-text= quote.content
              .quote-author= quote.source
              - if current_user
                .like-comment
                  = link_to like_quote_path(quote), id: "heart-quote-#{quote.id}", method: :put, remote: true do
                    - if current_user.voted_for? quote
                      %i.fa.fa-heart.liked #{quote.votes_for.size}
                    - else
                      %i.fa.fa-heart #{quote.votes_for.size}
                  = link_to comment_quote_path(quote), id: "comment-quote-#{quote.id}", remote: true, method: :put do
                    %i.fa.fa-comment #{quote.root_comments.size}
            .clearfix
          - if current_user
            = render partial: "quotes/comments", locals: {:quote => quote}
    .simplists
      - if @songs.empty?
        .simplist
          %center
            %em None yet!
      - else
        - @songs.each do |song|
          .simplist.song-simplist
            %h1.pull-left #{@songs.index(song)+1}
            .enter-new-movie
              .movie-form{style: "display: inline-block;"}
                - if current_user
                  .like-comment
                    = link_to like_song_path(song), id: "heart-song-#{song.id}", method: :put, remote: true do
                      - if current_user.voted_for? song
                        %i.fa.fa-heart.liked #{song.votes_for.size}
                      - else
                        %i.fa.fa-heart #{song.votes_for.size}
                    = link_to comment_song_path(song),id: "comment-song-#{song.id}", remote: true, method: :put do
                      %i.fa.fa-comment #{song.root_comments.size}
                .simplist-image.song-image.pull-left
                  - if song.picture
                    %img{:src => "#{song.picture}"}
                  %img#cover{:rel => "tooltip", :src => "", :title => ""}
                .item-info.pull-left
                  .item-title= song.name
                  .item-author= song.artist
                  .item-overview= song.album
            .clearfix
          - if current_user
            = render partial: "songs/comments", locals: {:song => song}
    - if @productlist
      .simplists
        - if @products.empty?
          .simplist
            %center
              %em None yet!
        - else
          - @products.each do |product|
            .simplist
              %h1.pull-left #{@products.index(product)+1}
              .product-wrapper.pull-left
                %center
                  .product-picture
                    = image_tag(product.picture)
                  %br
                  .product-name
                    - if product.link
                      = link_to "#{product.name}", product.link
                    - else
                      = product.name
              .clearfix

  .row
:javascript



  $(function() {
    $(".slick-current.category").css('color', 'darkred');
    $('.slick-current.category').css('borderBottom', '4px solid darkred');
    $('.share-it').tooltip({trigger: 'click'});
    $('.fa').tooltip({trigger:'click'});

    $('.category').first().addClass('active');
    sr = new ScrollReveal();
    sr.reveal('.simplist', {reset: true});
  });


  $(function() {

    $(".select-movie").on("change", function (e) {
      $( ".submit-movielist-btn" ).trigger( "click" );
    });

    $('.truncate').succinct({
      size: 320
    });

    $( ".edit-banner" ).delay( 800 ).fadeIn( 500 );


    $(".select-song").on("change", function (e) {
      $( ".submit-songlist-btn" ).trigger( "click" );
    });

    $(".quote").on("change", function (e) {
      $( ".submit-quotelist-btn" ).trigger( "click" );
    });

    $(".select-book").on("change", function (e) {
      $( ".submit-booklist-btn" ).trigger( "click" );
    });

    function insertPlaceholder(placeholder) {
      var moviename = $(placeholder).parents('.select2').siblings('input').first().val();
      $(placeholder).html(moviename);
    };

    $('body').on('click', function (e) {
        $('[data-toggle="tooltip"]').each(function () {
            //the 'is' for buttons that trigger popups
            //the 'has' for icons within a button that triggers a popup
            if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.tooltip').has(e.target).length === 0) {
                $(this).tooltip('hide');
            }
        });
    });

    $( ".select2-selection__placeholder" ).each(function(){
      insertPlaceholder(this);
    });

  });
