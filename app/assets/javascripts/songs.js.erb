$(document).ready(function(){

  function insertSong (html, songImage, songTitle, songArtist) {
    $('.select2-container--open').siblings('.song-image').html(html);
    $('.select2-container--open').siblings('input').first().val(songTitle);
    $('.select2-container--open').siblings('input').first().next().val(songImage);
    $('.select2-container--open').siblings('input').first().next().next().val(songArtist);
  }

  function formatSong (song) {
    if (song.artworkUrl100) {
      var markup = "<div class='select2-result-thing clearfix'>" +
        "<div class='select2-result-thing__artwork pull-left'><img src='" + song.artworkUrl100 + "' /></div>" +
        "<div class='select2-result-thing__meta pull-left'>" +
          "<div class='select2-result-thing__title'>" + song.trackName + "</div>";
    } else { markup = " "}
    return markup;
  }

  function formatSongSelection (song) {
    if (song.artworkUrl100) {
      var biggerImage = song.artworkUrl100.replace("100x100", "225x225");
      var html = "<img src='" + biggerImage + "'>"
    }

    var songImage = song.artworkUrl100;
    var songTitle = song.trackName;
    var songArtist = song.artistName;
    insertSong(html, songImage, songTitle, songArtist);
    var markup = "<strong>" + song.trackName + "</strong><em>"+ "<br>" + song.artistName + "</em>";
    if (song.trackName && song.artistName) {
      return markup;
    } else { return ""}
  }



  $(".select-song").select2({
    placeholder: "What's your #1 movie?",
    ajax: {
      url: "https://itunes.apple.com/search",
      dataType: 'jsonp',
      jsonpCallback: 'fooCallback',
      delay: 250,
      jsonp: "callback",
      // inputTooShort: false,
      data: function (params) {
        return {
          term: params.term, // search term
        };
      },
      processResults: function (data, params) {
        params.page = params.page || 1;

        var select2Data = $.map(data.results, function (obj) {
                            obj.id = obj.trackId;
                            obj.text = obj.trackName;
                            return obj;
        });


        return {
          results: select2Data,
          pagination: {
            more: (params.page * 30) < data.total_count
          }
        };
      },
      cache: true
    },
    escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
    minimumInputLength: 1,
    inputTooShort: false,
    templateResult: formatSong,
    templateSelection: formatSongSelection,
  });

});
